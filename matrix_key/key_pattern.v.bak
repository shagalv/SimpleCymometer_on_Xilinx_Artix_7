/*模块信号说明：
输入：系统复位时钟信号，系统时钟
输出：系统闸门时间，测量模式

模块功能说明：
测量开始前，先复位，复位后默认闸门时间1s，测量模式为频率测量
按下按键4，可以选择闸门时间1-10s，按照1s时间递增
按下按键1-3，可以选择测量模式为：频率，周期，脉冲，对应的led灯光也将变化
*/
module key_pattern(
    input sys_clk,  //输入时钟信号,50MHz
    input sys_rst_n,//输入系统复位信号
    input[3:0] col;
    output reg[29:0] key_gate_time,//输出闸门总时间选择，1-10s可调
    output reg[29:0] key_time_max,//断开待测信号后的刷新时间
    output[2:0] pattern,
    output[3:0] row
);

localparam FREQ = 3'd1;
localparam PERIOD = 3'd2;
localparam PULSE = 3'd3;
localparam SELF = 3'd4;

localparam SKIP = 30'd50_000_000;//步进 间隔为1s
localparam CNT_GATE_MAX = 30'd50_000_000;//总初始时长为1s，高电平时间为0.5s
localparam CNT_GATE_LOW = 30'd12_500_000;
localparam CNT_TIME_MAX = 30'd60_000_000;//断开信号后的刷新时间，初始为1.2s

// reg [3:0] row;//输入行信号
reg [2:0] key_state;

// wire [3:0] col;//输出列扫描信号
wire key_valid;//输出键值有效信号
wire [3:0] key_value;//输出键值



key44 u_key44(
    .clk(sys_clk),
    .reset(~sys_rst_n),
    .row(row),
    .col(col),
    .key_valid(key_valid),
    .key_value(key_value)
);



always@(posedge sys_clk or negedge sys_rst_n)
begin
    if(~sys_rst_n) 
    begin
        key_gate_time <= CNT_GATE_MAX;//复位后闸门
        key_state <= 3'd1;//复位后，默认为频率测量模式
        key_time_max <= CNT_TIME_MAX;
    end
    else
    begin
        if(key_valid)//有键按下
        begin
            case (key_value)
                4'd4://按键4，连续可调闸门时间
                begin
                    if(key_gate_time < 30'd500_000_000)
                        begin
                            key_gate_time <= key_gate_time + SKIP;
                            key_time_max <= key_time_max + SKIP;
                        end
                    else
                        begin
                            key_gate_time <= 30'd50_000_000;
                            key_time_max <= 30'd60_000_000;
                        end

                end
                4'd1: key_state <= FREQ;
                4'd2: key_state <= PERIOD;
                4'd3: key_state <= PULSE;
                4'd5: key_state <= SELF;//自校功能
                default://其他按键不响应
                begin
                    key_gate_time <= key_gate_time;
                    key_state <= key_state;
                    key_time_max <= key_time_max;
                end
            endcase
        end
        else //没有按键按下，不响应
        begin
            key_gate_time <= key_gate_time;
            key_state <= key_state;
            key_time_max <= key_time_max;
        end
    end
end

assign pattern = key_state;

endmodule